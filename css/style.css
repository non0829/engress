@charset "UTF-8";
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: #1B224C;
  font-family: "游ゴシック体", YuGothic, "游ゴシック", "Yu Gothic", "メイリオ", "Hiragino Kaku Gothic ProN", "Hiragino Sans", sans-serif;
}

body {
  position: relative;
  padding-top: 80px;
}

h1 {
  font-size: 32px;
}

h2 {
  font-size: 36px;
}

h3 {
  font-size: 26px;
}

li {
  list-style: none;
}

p {
  font-size: 16px;
}

a {
  color: #FFFFFF;
  font-size: 16px;
}

button:hover {
  opacity: 0.8;
}

.flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.button {
  -webkit-appearance: none;
  -moz-appearance: none;
  display: inline-block;
  appearance: none;
  border: none;
  background-color: transparent;
  text-decoration: none;
  cursor: pointer;
}

.wrapper {
  width: 95%;
  max-width: 900px;
  margin: 0 auto;
  overflow: hidden;
}
header {
  z-index: 100;
  position: fixed;
  top: 0;
  width: 100%;
  height: 80px;
  background-color: #FFFFFF;
}

.header_left_nav {
  padding: 27px 0px 0px 15px;
}
.header_left_nav li {
  margin-right: 27px;
  font-weight: bold;
}
.header_left_nav li a {
  color: #1B224C;
  text-decoration: none;
}

.header_right_nav {
  padding: 15px 10px 0px 0px;
}
.header_right_nav .header_info {
  width: 140px;
  margin: 12px 23px 0px 0px;
  text-align: right;
}
.header_right_nav .header_info p {
  font-size: 12px;
}
.header_right_nav .header_info .header_tel {
  flex-wrap: nowrap;
  justify-content: right;
}
.header_right_nav .header_info .header_tel img {
  width: 10px;
  height: 14px;
  margin: 6px 5px 0px 0px;
}
.header_right_nav .header_info .header_tel p {
  font-weight: bold;
  font-size: 16px;
}
.header_right_nav .header_btn {
  height: 50px;
  border: none;
  border-radius: 5px;
}
.header_right_nav .header_btn a {
  display: block;
  width: 100%;
  height: 100%;
  font-weight: bold;
  font-size: 14px;
  line-height: 50px;
  text-decoration: none;
}
.header_right_nav .header_btn:nth-child(2) {
  width: 142px;
  margin-right: 10px;
  background-color: #F5A623;
}
.header_right_nav .header_btn:last-child {
  width: 137px;
  background-color: #1B224C;
}

.hamburger {
  -webkit-transition: all 0.2s ease-in-out;
  z-index: 70;
  position: fixed;
  top: 16px;
  right: 20px;
  width: 48px;
  height: 48px;
  border: 1px solid #1B224C;
  border-radius: 50%;
  outline: none;
  box-shadow: 0 0 2rem transparent;
  transition: all 0.2s ease-in-out;
}
.hamburger:hover, .hamburger:focus {
  box-shadow: 0 0 0.5rem rgba(161, 161, 161, 0.5);
}

.hamburger__line {
  -webkit-transition: inherit;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 18px;
  height: 2px;
  margin: auto;
  background-color: #1B224C;
  transition: inherit;
}
.hamburger__line::before, .hamburger__line::after {
  -webkit-transition: inherit;
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: inherit;
  content: "";
  transition: inherit;
}
.hamburger__line::before {
  top: -5px;
}
.hamburger__line::after {
  top: 5px;
}

.hamburger-active {
  border: 1px solid #fff !important;
}
.hamburger-active .hamburger__line {
  background-color: transparent;
}
.hamburger-active .hamburger__line::before, .hamburger-active .hamburger__line::after {
  top: 0;
  background-color: #FFFFFF;
}
.hamburger-active .hamburger__line::before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
.hamburger-active .hamburger__line::after {
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.back_color {
  transition-duration: 0.3s;
}

.back_color.is-active {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(161, 161, 161, 0.5);
}

.sp-global-menu {
  z-index: 50;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  width: 200px;
  height: 100vh;
  overflow: hidden;
  transform: translateX(200px);
  background-color: #1B224C;
  color: #fff;
  opacity: 0;
  transition-duration: 0.3s;
}
.sp-global-menu.is-active {
  transform: translateX(0px);
  opacity: 1;
}
.sp-global-menu nav {
  width: 80%;
  margin: 80px auto 0px;
  text-align: center;
}
.sp-global-menu nav li {
  margin-top: 15px;
  color: #FFFFFF;
}
.sp-global-menu nav li a {
  text-decoration: none;
}
.sp-global-menu nav .sp-global-menu_info {
  margin-top: 30px;
  margin-bottom: 10px;
}
.sp-global-menu nav .sp-global-menu_info p {
  color: #FFFFFF;
}
.sp-global-menu nav .sp-global-menu_info .sp-global-menu_tel {
  width: 80%;
  margin: 5px auto;
}
.sp-global-menu nav .sp-global-menu_info .sp-global-menu_tel img {
  width: 12px;
  height: 20px;
  transform: translateY(2px);
}
.sp-global-menu nav .header_btn {
  width: 80%;
  height: 50px;
  margin: 10px auto;
  border: none;
  border-radius: 25px;
  background-color: #FFFFFF;
}
.sp-global-menu nav .header_btn a {
  color: #1B224C;
  text-decoration: none;
}

.sec_image {
  position: relative;
  height: 476px;
}
.sec_image img {
  z-index: -1;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.sec_image div {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
}
.sec_image div h2 {
  margin-top: 116px;
  color: #FFFFFF;
}
.sec_image div h3 {
  margin-top: 28px;
  color: #FFFFFF;
  font-weight: normal;
  font-size: 18px;
}
.sec_image div button {
  width: 280px;
  height: 50px;
  margin: 51px 0px 22px;
  border: none;
  border-radius: 25px;
  background-color: #F5A623;
}
.sec_image div button a {
  font-weight: bold;
  text-decoration: none;
}

.sec_about {
  padding: 63px 0px 54px;
  background-color: #1B224C;
  text-align: center;
}
.sec_about h2, .sec_about li, .sec_about p, .sec_about span {
  color: #FFFFFF;
}
.sec_about ul {
  justify-content: center;
  margin: 65px 0px 83px;
}
.sec_about ul li:first-child {
  margin-right: 57px;
}
.sec_about ul li:nth-child(2) {
  margin-right: 30px;
}
.sec_about .sec_about_box {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 248px;
  background-color: #FFFFFF;
}
.sec_about .sec_about_box .sec_about_box_inner {
  box-sizing: border-box;
  width: 96.4444444444%;
  height: 90.7258064516%;
  padding: 5px;
  border: 5px solid #1B224C;
}
.sec_about .sec_about_box .sec_about_box_inner h2, .sec_about .sec_about_box .sec_about_box_inner span, .sec_about .sec_about_box .sec_about_box_inner p {
  color: #1B224C;
}
.sec_about .sec_about_box .sec_about_box_inner p {
  margin-top: 20px;
  font-size: 18px;
  line-height: 31px;
}
.sec_about .sec_about_box .sec_about_box_inner span {
  background: linear-gradient(transparent 70%, #F5A623 30%);
}

.sec_strong {
  padding: 59px 0px 39px;
  text-align: center;
}
.sec_strong h2 {
  margin-bottom: 59px;
}
.sec_strong .strong_article_left {
  width: calc(100% - 50px - 350px);
  text-align: left;
}
.sec_strong .strong_article_right {
  display: flex;
  align-items: center;
  width: 350px;
}
.sec_strong .strong_article_right .strong_article_right_inner {
  height: 240px;
}
.sec_strong .strong_article_right .strong_article_right_inner img {
  object-fit: cover;
}
.sec_strong article:nth-child(2n) {
  flex-direction: row-reverse;
}
.sec_strong article + article {
  margin-top: 60px;
}

.strong_article_left span {
  display: inline-block;
  width: 90px;
  height: 30px;
  margin-bottom: 35px;
  padding-top: 5px;
  background-color: #F5A623;
  color: #FFFFFF;
  font-size: 12px;
  text-align: center;
}
.strong_article_left p {
  margin-top: 39px;
}

.strong_price {
  position: relative;
  height: 217px;
  margin-top: 93px;
}
.strong_price img {
  z-index: -1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.strong_price div {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
}
.strong_price div h3 {
  margin-top: 61px;
  color: #FFFFFF;
}
.strong_price div button {
  width: 200px;
  height: 50px;
  margin-top: 27px;
  border: 1px solid #FFFFFF;
  border-radius: 30px;
  background-color: transparent;
}
.strong_price div button a {
  display: block;
  width: 100%;
  height: 100%;
  font-weight: bold;
  line-height: 50px;
  text-decoration: none;
}

.sec_success {
  padding: 58px 0px 60px;
  background-color: #1B224C;
  background-color: #1B224C;
  text-align: center;
}
.sec_success h2, .sec_success article > p {
  color: #FFFFFF;
}
.sec_success h2 {
  margin-bottom: 137px;
}
.sec_success article {
  width: calc((100% - 60px) / 3);
  text-align: left;
}
.sec_success article > p {
  line-height: 29px;
}
.sec_success article .success_image {
  position: relative;
  height: 171px;
  margin-top: 9px;
  margin-bottom: 15px;
  background-color: #FFFFFF;
}
.sec_success article .success_image img {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto;
}
.sec_success article .success_flex p {
  height: 32px;
  padding-left: 14px;
  background-color: #FFFFFF;
  line-height: 32px;
}
.sec_success article .success_flex p:nth-child(1) {
  width: 100px;
}
.sec_success article .success_flex p:nth-child(2) {
  width: calc(100% - 100px - 8px);
}
.sec_success article .success_flex p:nth-child(3) {
  width: 100%;
  margin-top: 10px;
}

.sec_flow {
  padding-top: 58px;
  text-align: center;
}
.sec_flow dl {
  margin-top: 53px;
}
.sec_flow dl div {
  height: 64px;
}
.sec_flow dl div dt {
  width: 64px;
  padding-top: 22px;
  background-color: #F5A623;
  color: #FFFFFF;
  font-size: 16px;
}
.sec_flow dl div dd {
  width: 214px;
  padding-top: 22px;
  padding-left: 21px;
  background-color: #F8F8F8;
  font-weight: bold;
  font-size: 16px;
  text-align: left;
}
.sec_flow dl div dd:last-child {
  flex: 1;
  padding-left: 0px;
  font-weight: normal;
}
.sec_flow dl div dd:last-child::before {
  height: 29px;
  margin-right: 53px;
  border: 1px solid #C3C3C3;
  content: "";
}
.sec_flow dl div + div {
  margin-top: 8px;
}

.sec_question {
  padding-top: 75px;
  text-align: center;
}
.sec_question h2 {
  margin-bottom: 30px;
}
.sec_question .accordion-title {
  position: relative;
  padding: 25px 0px;
  border-top: 1px solid #1B224C;
  font-weight: normal;
  font-size: 16px;
  text-align: left;
  cursor: pointer;
  user-select: none;
}
.sec_question .accordion-title::before, .sec_question .accordion-title::after {
  display: block;
  position: absolute;
  top: 50%;
  right: 25px;
  width: 25px;
  height: 3px;
  background-color: #1B224C;
  content: "";
}
.sec_question .accordion-title::after {
  transform: rotate(90deg);
  transition-duration: 0.3s;
}
.sec_question .accordion-title.is-active::before {
  opacity: 0;
}
.sec_question .accordion-title.is-active::after {
  transform: rotate(0);
}
.sec_question .accordion-title h4 {
  width: calc(100% - 80px);
  font-weight: normal;
}
.sec_question .last-accordion-title {
  border-bottom: 1px solid #1B224C;
}
.sec_question .accordion-content {
  height: 0;
  padding: 0 18px;
  overflow: hidden;
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;
  line-height: 0;
  text-align: left;
  opacity: 0;
  transition-duration: 0.3s;
}
.sec_question .accordion-content.is-open {
  height: auto;
  margin: 5px 0 15px;
  padding: 23px 26px;
  background-color: #F8F8F8;
  font-size: 16px;
  line-height: normal; /* numberに書き換える*/
  opacity: 1;
}

.wrapper_blog_news {
  width: 90%;
}

.sec_blog {
  width: 47.7%;
  margin-top: 90px;
  margin-bottom: 119px;
}
.sec_blog a {
  color: #1B224C;
}
.sec_blog article {
  margin-top: 30px;
}
.sec_blog article .blog_image {
  position: relative;
  width: 150px;
  height: 110px;
}
.sec_blog article .blog_image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.sec_blog article .blog_image span {
  position: absolute;
  top: 0;
  left: 0;
  padding: 4px 7px 4px 9px;
  border: 1px solid #707070;
  background-color: #1B224C;
  color: #FFFFFF;
  font-size: 12px;
}
.sec_blog article .blog_text {
  flex-direction: column;
  width: calc(100% - 150px - 20px);
}
.sec_blog article .blog_text h4 {
  width: 100%;
}
.sec_blog article .blog_text time {
  font-size: 12px;
}

.sec_news {
  width: 44.6%;
  margin-top: 90px;
  margin-bottom: 119px;
}
.sec_news a {
  color: #1B224C;
}
.sec_news li {
  margin-top: 30px;
}
.sec_news li time {
  margin-bottom: 16px;
  font-size: 12px;
}
.sec_news li h4 {
  height: 59px;
  font-weight: normal;
}

.footer_image {
  position: relative;
  height: 256px;
}
.footer_image img {
  z-index: -1;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.footer_image div {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
}
.footer_image div h2 {
  margin-top: 70px;
  color: #FFFFFF;
}
.footer_image div button {
  width: 280px;
  height: 50px;
  margin: 16px 0px 22px;
  border: none;
  border-radius: 25px;
  background-color: #F5A623;
}
.footer_image div button a {
  font-weight: bold;
  text-decoration: none;
}

.footer_phone_text {
  justify-content: center;
  width: 90%;
  max-width: 778px;
  height: 80px;
  margin: 0 auto;
  padding-top: 20px;
}
.footer_phone_text h2 {
  margin-right: 20px;
  margin-left: 20px;
}
.footer_phone_text p {
  margin-top: 18px;
}
.footer_phone_text p:last-child {
  margin-right: 108px;
}

.footer_info {
  background-color: #1B224C;
}
.footer_info .footer_info_text {
  width: 80%;
  max-width: 917px;
  height: 230px;
  margin: 0 auto;
}

.footer_info_left {
  flex: 1;
  padding-top: 45px;
}
.footer_info_left ul {
  justify-content: left;
}
.footer_info_left ul li {
  color: #FFFFFF;
}
.footer_info_left ul li + li::before {
  height: 23px;
  margin: 0 21.5px;
  border: 1px solid #FFFFFF;
  content: "";
}
.footer_info_left ul li a {
  color: #FFFFFF;
  text-decoration: none;
}

.footer_info_right {
  width: 197px;
}
.footer_info_right .footer_info_image {
  height: 58px;
  margin: 35px 0px 27px;
  background-color: #FFFFFF;
}
.footer_info_right .footer_info_image img {
  width: 197px;
  height: auto;
  padding: 14px 19px;
}
.footer_info_right .footer_info_phone {
  text-align: right;
}
.footer_info_right .footer_info_phone p {
  color: #FFFFFF;
}
.footer_info_right .footer_info_phone .footer_tel {
  justify-content: right;
}
.footer_info_right .footer_info_phone .footer_tel img {
  width: 11px;
  height: 16px;
  margin-right: 5px;
  transform: translateY(4px);
}
.footer_info_right .footer_info_phone > p {
  margin-top: 5px;
  font-size: 12px;
}

.footer_copyright {
  height: 36px;
}
.footer_copyright .footer_copyright_text {
  width: 73%;
  margin: 0 auto;
  padding-top: 12px;
  text-align: right;
}
.footer_copyright p {
  font-size: 12px;
}
@media screen and (max-width: 900px) {
  h1 {
    font-size: 30px;
  }
  h2 {
    font-size: 32px;
  }
  h3 {
    font-size: 26px;
  }
  .sec_strong .strong_article_left {
    width: calc(100% - 30px - 250px);
  }
  .sec_strong .strong_article_right {
    width: 250px;
    height: 200px;
    margin-top: 40px;
  }
  .sec_strong .strong_article_right .strong_article_right_inner {
    width: 250px;
    height: 200px;
  }
  .sec_strong .strong_article_right .strong_article_right_inner img {
    width: 100%;
    height: 100%;
  }
  .sec_success h2 {
    margin-bottom: 60px;
  }
  .sec_success article {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 400px;
  }
  .sec_success article > p {
    line-height: 24px;
  }
  .sec_success article .success_flex p {
    margin-top: 10px;
    font-size: 12px;
  }
  .sec_success article .success_flex p:nth-child(1) {
    width: 100%;
  }
  .sec_success article .success_flex p:nth-child(2) {
    width: 100%;
  }
  .sec_success article .success_flex p:nth-child(3) {
    width: 100%;
  }
  .sec_flow dl div {
    height: auto;
  }
  .sec_flow dl div dt {
    width: 90px;
    padding-top: 0px;
    line-height: 46px;
  }
  .sec_flow dl div dd {
    width: calc(100% - 90px);
    padding-top: 0px;
    line-height: 46px;
  }
  .sec_flow dl div dd:last-child {
    flex: unset;
    width: 100%;
    padding-left: 20px;
  }
  .sec_flow dl div dd:last-child::before {
    content: none;
  }
  .footer_phone_text {
    flex-direction: column;
    align-items: center;
    height: auto;
    margin-bottom: 10px;
  }
  .footer_phone_text p {
    margin: 10px 0px !important;
  }
  .footer_info .footer_info_text {
    flex-direction: column;
    flex-wrap: unset;
    align-items: center;
    justify-content: start;
    width: 90%;
  }
  .footer_info_left {
    flex: unset;
    height: 80px;
    margin-bottom: 20px;
  }
  .footer_info_right {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    justify-content: center;
    width: 100%;
  }
  .footer_info_right .footer_info_image {
    margin-top: 0px;
    margin-right: 25px;
  }
  .footer_info_right .footer_info_phone {
    margin-top: 5px;
  }
}
@media screen and (max-width: 640px) {
  h1, h2 {
    font-size: 28px;
  }
  h3 {
    font-size: 26px;
  }
  p, a {
    font-size: 14px;
  }
  .wrapper {
    width: 90%;
  }
  .header_left_nav li {
    display: none;
  }
  .header_left_nav li:nth-child(1) {
    display: block;
  }
  .sec_about h2 {
    width: 100%;
    max-width: 340px;
    margin: 0 auto;
  }
  .sec_about ul {
    flex-direction: column;
    align-items: center;
    margin: 40px 0px;
  }
  .sec_about ul li:first-child {
    margin-right: 0px;
  }
  .sec_about ul li:nth-child(2) {
    margin-right: 0px;
  }
  .sec_about ul li + li {
    margin-top: 16px;
  }
  .sec_about ul li {
    font-size: 14px;
  }
  .sec_about .sec_about_box {
    height: 210px;
  }
  .sec_about .sec_about_box .sec_about_box_inner h2 {
    max-width: none;
    margin-top: 10px;
    font-size: 20px;
  }
  .sec_about .sec_about_box .sec_about_box_inner p {
    font-size: 12px;
    line-height: 21px;
  }
  .sec_strong .flex {
    flex-direction: column;
    align-items: center;
  }
  .sec_strong .strong_article_left {
    width: 100%;
    text-align: center;
  }
  .sec_strong .strong_article_right {
    width: 300px;
    height: 250px;
  }
  .sec_strong .strong_article_right .strong_article_right_inner {
    width: 300px;
    height: 250px;
  }
  .sec_strong article:nth-child(2n) {
    flex-direction: column;
    align-items: center;
  }
  .strong_price div h3 {
    font-size: 20px;
  }
  .sec_success .wrapper > .flex {
    flex-direction: column;
    align-items: center;
  }
  .sec_success article {
    width: 100%;
    height: 330px;
  }
  .sec_success article > p {
    width: 80%;
    margin: 0 auto;
  }
  .sec_success article + article {
    margin-top: 40px;
  }
  .sec_success article .success_image {
    width: 300px;
    margin: 0 auto;
  }
  .sec_success article .success_flex {
    width: 300px;
    margin: 0 auto;
  }
  .sec_success article .success_flex p:nth-child(1) {
    width: 100px;
  }
  .sec_success article .success_flex p:nth-child(2) {
    width: 180px;
    margin-left: 20px;
  }
  .sec_success article .success_flex p:nth-child(3) {
    width: 100%;
  }
  .wrapper_blog_news .flex {
    flex-direction: column;
  }
  .sec_blog {
    width: 100%;
    margin-top: 60px;
    margin-bottom: 0px;
    text-align: center;
  }
  .sec_blog article .blog_image {
    width: 300px;
    height: 200px;
    margin: 0 auto;
  }
  .sec_blog article .blog_text {
    width: 80%;
    max-width: 400px;
    margin: 0 auto;
    margin-top: 20px;
    margin-bottom: 0px;
    text-align: center;
  }
  .sec_blog article .blog_text h4 a {
    font-size: 18px;
  }
  .sec_blog article .blog_text time {
    margin-top: 10px;
    font-size: 16px;
  }
  .sec_news {
    width: 100%;
    margin-top: 60px;
    margin-bottom: 60px;
    text-align: center;
  }
  .sec_news li {
    width: 80%;
    max-width: 400px;
    margin: 0 auto;
    margin-top: 20px;
    text-align: left;
  }
  .footer_info_left ul li + li::before {
    margin: 0 12px;
  }
}
@media screen and (max-width: 1002px) {
  .header_right_nav {
    display: none;
  }
}
@media screen and (min-width: 1003px) {
  .hamburger {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
